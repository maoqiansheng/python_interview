"""
给定一个 32 位有符号整数，将整数中的数字进行反转

> 示例 1:

输入: 123
输出: 321

> 示例 2:

输入: -123
输出: -321

> 示例 3:

输入: 120
输出: 21

注意:
假设我们的环境只能存储 32 位有符号整数，其数值范围是 [−2^31,  2^31 − 1]
根据这个假设，如果反转后的整数溢出，则返回 0

"""
# 解题方案：
# 翻转数字问题需要注意的就是溢出问题，为什么会存在溢出问题呢
# 我们知道int型的数值范围是: -2147483648～2147483647(-2^31 ~ 2^31-1)
# 那么如果我们要翻转 1000000009 这个在范围内的数得到 9000000001，而翻转后的数就超过了范围
# 步骤
# 1、记录数字的符号
# 2、反转
# 3、判断是否溢出


class Solution:
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        mark = 1 if x >= 0 else -1
        x_abs = abs(x)
        result = mark * int(str(x_abs)[::-1])
        return result if -2 ** 31 <= result <= 2 ** 31 - 1 else 0


if __name__ == "__main__":
    num = -12390
    so = Solution()
    n = so.reverse(num)
    print("结果: ", n)
